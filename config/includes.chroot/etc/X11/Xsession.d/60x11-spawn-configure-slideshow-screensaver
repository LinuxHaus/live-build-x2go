# enable a non-locking local slideshow screensaver
XSAVERIMAGES=$(sed -e 's/ \([^ ]*\)=/\n\1=/g' -e 's/\([^=]["'"'"']\) /\1\n/g' -e 's/ \([^ "'"'"']\)/\n\1/g' /proc/cmdline | awk -F '=' '$1 == "xsaverimages" { print $2 }' | tr -dc '0-9a-zA-Z,$-_.+!*'"'"'();/?:@=&|')

XSAVERIDLETIME=$(cat /proc/cmdline | tr ' ' '\n' | awk -F'=' '"xsaveridletime"==$1 {print $2}' | tr -dc '0-9')

XSAVERIMGTIME=$(cat /proc/cmdline | tr ' ' '\n' | awk -F'=' '"xsaverimgtime"==$1 {print $2}' | tr -dc '0-9')

IMAGEDIR="/var/tmp/images/"

SLIDESDIR="${IMAGEDIR}/slides/"

if [ -z "$XSAVERIMAGES" ] && [ -z "$XSAVERIDLETIME" ] && [ -z "$XSAVERIMGTIME" ] || [ -s /etc/lightdm/lightdm.conf ] ; then
	# don't run when lightdm is present -> most likely MMD with MATE-Screensaver
	: # "exit 0" is a bad idea here, so we "NOP" instead
else

	[ -z "$XSAVERIDLETIME" ] && XSAVERIDLETIME=300 # default to 5 minutes if parameter wasn't set
	[ -z "$XSAVERIMGTIME" ] && XSAVERIMGTIME=30 # default to 30 seconds if parameter wasn't set

	IDLE_TIME=$(($XSAVERIDLETIME*1000))

	BLACK=false
        while sleep 1; do
                idle=$(xprintidle)
                [ -z "$idle" ] && exit 1
                if [ $idle -ge $IDLE_TIME ] && ! $BLACK ; then
			# idletime has been exceeded and screen isn't black, so let's take action

			xdotool search --name . set_window --class "hideme" %@ # tag all present windows
			xsetroot -solid "#000000" # set background to black so the next command doesn't "flash" the screen with the background color
			xdotool search --class "hideme" windowunmap %@ # now move all windows to the background
			# if we have local images to show, spawn feh, if it isn't already running
                        if [ $(ls $SLIDESDIR 2>/dev/null| wc -l) -gt 0 ] ; then
                                if ! ps -C feh >/dev/null ; then
					SCREENPOSITIONS=$(xrandr | awk '$2 == "connected" { print $3 $4 }' | tr -dc '[0-9]x+\n')
					for SINGLESCREENPOS in $SCREENPOSITIONS; do
	                                        feh -Y -x -g $SINGLESCREENPOS -D $XSAVERIMGTIME -Z -B black -q "$SLIDESDIR" &
					done
                                fi
                        fi

			BLACK=true # set flag showing that we're done

                else
                        if [ $idle -lt $IDLE_TIME ] && $BLACK ; then
				# user action detected and screen is black, so let's take action

				# first, kill feh, if it is running
                                if ps -C feh >/dev/null; then
                                        killall feh
                                fi

				# restore all hidden windows to foreground
				xdotool search --class "hideme" windowmap %@

				if ps -C nxproxy >/dev/null ; then # do we have an nxproxy task running?
					# if so, keep kicking it into the foreground until it has focus
					while [ "$(xdotool getwindowfocus)" != "$(xdotool search --classname "X2GoAgent|NXAgent")" ] ; do
						xdotool search --classname "X2GoAgent|NXAgent" windowmap --sync windowfocus --sync
					done
					# wiggle mouse by 11 px to trigger remote screensaver password prompt (10 px is xscreensaver's default hysteresis)
					xdotool sleep 0.1 mousemove_relative -- 11 0 sleep 0.1 mousemove_relative -- -11 0
					## Option: toggle NumLock instead
					# xdotool sleep 0.1 key Num_Lock sleep 0.1 key Num_Lock
				elif ps -C x2gokdriveclient >/dev/null ; then # do we have an x2gokdriveclient task running?
					# if so, keep kicking it into the foreground until it has focus
					while [ "$(xdotool getwindowfocus)" != "$(xdotool search --classname "x2gokdriveclient")" ] ; do
						xdotool search --classname "x2gokdriveclient" windowmap --sync windowfocus --sync
					done
					# wiggle mouse by 11 px to trigger remote screensaver password prompt (10 px is xscreensaver's default hysteresis)
					xdotool sleep 0.1 mousemove_relative -- 11 0 sleep 0.1 mousemove_relative -- -11 0
					## Option: toggle NumLock instead
					# xdotool sleep 0.1 key Num_Lock sleep 0.1 key Num_Lock
				elif ps -C Xephyr >/dev/null ; then # do we have a Xephyr task running?
					# if so, keep kicking it into the foreground until it has focus
					while [ "$(xdotool getwindowfocus)" != "$(xdotool search --classname "Xephyr")" ] ; do
						xdotool search --classname "Xephyr" windowmap --sync windowfocus --sync
					done
					# wiggle mouse by 11 px to trigger remote screensaver password prompt (10 px is xscreensaver's default hysteresis)
					xdotool sleep 0.1 mousemove_relative -- 11 0 sleep 0.1 mousemove_relative -- -11 0
					## Option: toggle NumLock instead
					# xdotool sleep 0.1 key Num_Lock sleep 0.1 key Num_Lock
				elif ps -C Xnest >/dev/null ; then # do we have an Xnest task running?
					# if so, keep kicking it into the foreground until it has focus
					while [ "$(xdotool getwindowfocus)" != "$(xdotool search --name "^Xnest$")" ] ; do
						xdotool search --name "^Xnest$" windowmap --sync windowfocus --sync
					done
					# wiggle mouse by 11 px to trigger remote screensaver password prompt (10 px is xscreensaver's default hysteresis)
					xdotool sleep 0.1 mousemove_relative -- 11 0 sleep 0.1 mousemove_relative -- -11 0
					## Option: toggle NumLock instead
					# xdotool sleep 0.1 key Num_Lock sleep 0.1 key Num_Lock
				elif ps -C xfreerdp >/dev/null ; then # do we have an xfreerdp task running?
					# if so, keep kicking it into the foreground until it has focus
					while [ "$(xdotool getwindowfocus)" != "$(xdotool search --classname "xfreerdp")" ] ; do
						xdotool search --classname "xfreerdp" windowmap --sync windowfocus --sync
					done
					# wiggle mouse by 11 px to trigger remote screensaver password prompt (10 px is xscreensaver's default hysteresis)
					xdotool sleep 0.1 mousemove_relative -- 11 0 sleep 0.1 mousemove_relative -- -11 0
					## Option: toggle NumLock instead
					# xdotool sleep 0.1 key Num_Lock sleep 0.1 key Num_Lock
				elif ps -C rdesktop >/dev/null ; then # do we have an rdesktop task running?
					# if so, keep kicking it into the foreground until it has focus
					while [ "$(xdotool getwindowfocus)" != "$(xdotool search --classname "rdesktop")" ] ; do
						xdotool search --classname "rdesktop" windowmap --sync windowfocus --sync
					done
					# wiggle mouse by 11 px to trigger remote screensaver password prompt (10 px is xscreensaver's default hysteresis)
					xdotool sleep 0.1 mousemove_relative -- 11 0 sleep 0.1 mousemove_relative -- -11 0
					## Option: toggle NumLock instead
					# xdotool sleep 0.1 key Num_Lock sleep 0.1 key Num_Lock
				else
					# if there's no nxproxy/Xephyr/Xnest window, we're likely to be in the login screen, so restore fullscreen X2GoClient Login window
					PRIMARYSCREEN=$(xrandr -d :0 | awk '$3 == "primary" { print $4 }')
					PRIMARYSCREENCOORD=$(echo $PRIMARYSCREEN | awk -F'+' '{ print $2 " " $3}' | tr -dc '[0-9] ')
					PRIMARYSCREENSIZE=$(echo $PRIMARYSCREEN | awk -F'[x|+]' '{ print $1 " " $2}' | tr -dc '[0-9] ')
					xdotool search --onlyvisible --classname "X2GoClient" windowmove --sync $PRIMARYSCREENCOORD || echo $?
					xdotool search --onlyvisible --classname "X2GoClient" windowsize --sync $PRIMARYSCREENSIZE || echo $?
				fi

				xsetroot -solid "#$HEXCOLOR" # restore old background color
                                BLACK=false
                        fi
                fi
        done &
fi
